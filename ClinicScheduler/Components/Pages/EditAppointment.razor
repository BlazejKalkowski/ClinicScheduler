@using Appointment = ClinicScheduler.Entities.Appointment
@inject DialogService DialogService

<RadzenTemplateForm TItem="Appointment" Data="@model" Submit="@OnSubmit">
    <div class="row" style="margin-bottom: 16px">
        <div class="row-md-3">
            <RadzenLabel Text="Text"/>
        </div>
        <div class="col">
            <RadzenTextBox @bind-Value="@model.Text" Name="Text" />
            <RadzenRequiredValidator Text="Title is required" Component="Text" />
        </div>
    </div>
    <div class="row" style="margin-bottom: 16px">
        <div class="row-md-3">
            <RadzenLabel Text="Start"/>
        </div>
        <div class="col">
            <RadzenDatePicker @bind-Value="@model.Start" Name="Start" ShowTime="true" />
            <RadzenRequiredValidator Text="Start is required" Component="Start" />
        </div>
    </div>
    <div class="row" style="margin-bottom: 16px">
        <div class="row-md-3">
            <RadzenLabel Text="End"/>
        </div>
        <div class="col">
            <RadzenDatePicker @bind-Value="@model.End" Name="End" ShowTime="true" />
            <RadzenRequiredValidator Text="End is required" Component="End" />
        </div>
    </div>
            <div class="row" style="margin-bottom: 16px">
                <div class="row-md-3"></div>
                <div class="col">
                    <RadzenButton ButtonType="ButtonType.Submit" Text="Save"></RadzenButton>
                </div>
            </div>
</RadzenTemplateForm>


@code {
    [Parameter]
    public Appointment Appointment { get; set; }
    private Appointment model = new();

    protected override void OnParametersSet()
    {
        model = Appointment;
    }

    void OnSubmit(Appointment model)
    {
        DialogService.Close(model);
    }
    
}