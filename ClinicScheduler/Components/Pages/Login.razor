@page "/login"
@using ClinicScheduler.Dto
@using ClinicScheduler.Middleware
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Identity
@using System.Net

@inject NavigationManager NavigationManager
@inject HttpClient Http
@inject IJSRuntime JSRuntime
@inject CustomAuthenticateStateProvider AuthenticateStateProvider

<h3>Login</h3>


<EditForm Model="_loginDto" OnSubmit="Submit">
    <div class="form-group">
        <label for="exampleInputUserName">Username</label>
        <input type="email" class="form-control" id="exampleInputUserName" aria-describedby="emailHelp" @bind-value="_loginDto.UserName" placeholder="Username">
    </div>
    <div class="form-group">
        <label for="exampleInputEmail1">Email address</label>
        <input type="email" class="form-control" id="exampleInputEmail1" aria-describedby="emailHelp" @bind-value="_loginDto.Email" placeholder="Enter email">
    </div>
    <div class="form-group">
        <label for="exampleInputPassword1">Password</label>
        <input type="password" class="form-control" id="exampleInputPassword1" @bind-value="_loginDto.Password" placeholder="Password">
    </div>
    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>

@code {
    private LoginDto _loginDto;

    protected override Task OnInitializedAsync()
    {
        _loginDto = new();
        return base.OnInitializedAsync();
    }

    public async Task Submit()
    {
        var response = await Http.PostAsJsonAsync("/login", _loginDto);

        if (response.IsSuccessStatusCode)
        {
            var data = await response.Content.ReadAsStringAsync();
            await JSRuntime.InvokeVoidAsync("localStorage.setItem", "token", data);
            var userInfoResponse = await Http.GetAsync("/account/info");

            if (userInfoResponse.IsSuccessStatusCode)
            {
                var userInfo = await userInfoResponse.Content.ReadFromJsonAsync<UserDto?>();
                await AuthenticateStateProvider.AuthenticateAsync(userInfo);
                NavigationManager.NavigateTo("/");
            }
        }
    }

}